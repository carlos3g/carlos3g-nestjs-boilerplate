version: '3.9'
services:
  postgres:
    image: postgres:10-alpine
    restart: unless-stopped
    container_name: boilerplate-postgre
    env_file: .env
    environment:
      POSTGRES_MULTIPLE_DATABASES: ${DB_DATABASE},${DB_DATABASE}_test
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_SCHEMA: ${DB_SCHEMA}
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - ./postgres-scripts/:/docker-entrypoint-initdb.d/
      - ./db:/var/lib/postgresql/data
    networks:
      - boilerplatenetwork

  api:
    restart: unless-stopped
    env_file: .env
    container_name: boilerplate-api
    build:
      context: .
      args:
        UID: ${UID}
        GID: ${GID}
        USER: ${USER}
    command: npm run start:dev
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DATABASE_URL: postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_DATABASE}?schema=${DB_SCHEMA}
    tty: true
    working_dir: /app
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    depends_on:
      - postgres
    ports:
      - '${PORT}:3000'
    networks:
      - boilerplatenetwork
volumes:
  boilerplate-db:
  node_modules:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./node_modules

networks:
  boilerplatenetwork:
    driver: bridge
